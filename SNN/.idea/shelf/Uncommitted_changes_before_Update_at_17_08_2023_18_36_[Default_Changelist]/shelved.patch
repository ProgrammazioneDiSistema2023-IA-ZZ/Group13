Index: src/neuron.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>use rand::{thread_rng, Rng};\r\nuse std::fmt;\r\n\r\n//#[derive(Debug)]\r\n// pub struct Connection {\r\n//     id_input: i32,\r\n//     weight: f64\r\n// }\r\n//\r\n// impl Connection {\r\n//\r\n//     pub fn new(id_input:i32, weight:f64) -> Self{\r\n//         Connection{\r\n//             id_input,\r\n//             weight\r\n//         }\r\n//     }\r\n// }\r\n\r\n#[derive(Debug, Clone, Copy)]\r\npub enum ErrorComponent {\r\n    NoErr,\r\n    Threshold,\r\n    VMem,\r\n    Weights\r\n}\r\n\r\n#[derive(Debug, Clone, Copy)]\r\npub enum Type {\r\n    None,\r\n    Stuck0,\r\n    Stuck1,\r\n    BitFlip\r\n}\r\n\r\n#[derive(Debug, Clone, Copy)]\r\npub struct ConfErr {\r\n    id_neuron: i32,\r\n    t_start: i32,\r\n    duration: i32, //valutare se aggiungere t_end cosi da avere sempre vincolo dentro boundaries (generi da t_start+1 a input.len())\r\n    //counter_duration: i32,\r\n    n_bit: i32,\r\n    err_type: Type,\r\n    err_comp: ErrorComponent,\r\n    pub v_start: f64\r\n}\r\n\r\nimpl ConfErr{\r\n\r\n    pub fn new(id_neuron: i32, t_start:i32, duration:i32, /*counter_duration: i32,*/ n_bit:i32, err_type: Type, err_comp: ErrorComponent, v_start: f64) -> Self{\r\n        ConfErr{\r\n            id_neuron,\r\n            t_start,\r\n            duration,\r\n            //counter_duration,\r\n            n_bit,\r\n            err_type,\r\n            err_comp,\r\n            v_start\r\n        }\r\n    }\r\n}\r\n\r\n#[derive(Debug, Clone)]\r\npub struct Neuron {\r\n    id: i32,\r\n    v_threshold: f64,\r\n    v_rest: f64,\r\n    v_mem: f64, //la struct dovrà essere mutabile cosicchè ogni volta v_mem cambia in base al t\r\n    v_reset: f64,\r\n    connections_same_layer: Vec<f64>,\r\n    connections_prec_layer: Vec<f64>\r\n}\r\n\r\nimpl Neuron{\r\n\r\n    pub fn new( id : i32, v_threshold:f64, v_rest:f64, v_mem:f64, v_reset:f64, connections_same_layer: Vec<f64>,connections_prec_layer: Vec<f64>) -> Self{\r\n\r\n        Neuron {\r\n            id,\r\n            v_threshold,\r\n            v_rest,\r\n            v_mem, //valore t0\r\n            v_reset,\r\n            connections_same_layer,\r\n            connections_prec_layer,\r\n        }\r\n    }\r\n\r\n    pub fn compute_output(&mut self, inputs_prec_layer: &Vec<i32>, inputs_same_layer: &Vec<i32>, errors_vec: &mut Vec<ConfErr>, time: i32) -> i32{ //sarà chiamata dalla rete grande\r\n        for error in errors_vec{\r\n            if error.id_neuron == self.id && error.t_start <= time && error.t_start+error.duration >= time {\r\n                println!(\"Neurone: {}, time: {}, before error: {}, v_start: {}\",self.id, time, self.v_threshold, error.v_start);\r\n                self.create_error(error, time);\r\n                //println!(\"prova di error: {}\", error.prova);\r\n                //println!(\"after error: {}\",self.v_threshold);\r\n            }\r\n        }\r\n        self.v_mem = self.v_rest + (self.v_mem - self.v_rest)*f64::exp(-1.0/0.1);\r\n        //let _v_m = self.v_mem.clone();\r\n\r\n        for i in 0..inputs_prec_layer.len(){\r\n            self.v_mem += inputs_prec_layer[i] as f64 * self.connections_prec_layer[i];\r\n\r\n        }\r\n\r\n       for i in 0..inputs_same_layer.len(){\r\n           self.v_mem += inputs_same_layer[i] as f64 * self.connections_same_layer[i];\r\n        }\r\n\r\n\r\n        // println!(\"id : {}, v_mem : {} -> {}\", self.id, v_m, self.v_mem);\r\n        if self.v_mem > self.v_threshold{\r\n            self.v_mem = self.v_reset;\r\n            return 1;\r\n        }\r\n        0\r\n    }\r\n\r\n    fn create_error(&mut self, error: &mut ConfErr, time: i32){\r\n        let mut number: f64 = 0.0;\r\n        let bit_position = error.n_bit; // Posizione del bit da modificare\r\n        let mut ending = false;\r\n        // Converte il numero in un intero e modifica il bit alla posizione desiderata\r\n        match error.err_comp {\r\n            ErrorComponent::Threshold => {\r\n                if error.t_start==time { error.v_start = self.v_threshold; }\r\n                if error.t_start+error.duration==time { self.v_threshold=error.v_start; ending=true; }\r\n                number = self.v_threshold; },\r\n            ErrorComponent::VMem => {\r\n                if error.t_start==time { error.v_start = self.v_mem; }\r\n                if error.t_start+error.duration==time { error.v_start = self.v_mem; ending=true; }\r\n                number = self.v_mem; },\r\n            _ => {println!(\"codione sempre prob\")},\r\n        }\r\n\r\n        if ending==true{\r\n            return;\r\n        }\r\n\r\n        let mut bits: u64 = number.to_bits();\r\n        match error.err_type {\r\n            Type::Stuck0 => {\r\n                let mask = !(1 << bit_position);\r\n                bits &= mask;// stuck ad 0\r\n            },\r\n            Type::Stuck1 => {\r\n                let mask = 1 << bit_position;\r\n                bits &= mask;// stuck ad 1\r\n            },\r\n            Type::BitFlip => {\r\n                bits ^= 1 << bit_position; // Esegue un XOR per invertire il bit\r\n            },\r\n            _ => {println!(\"greve\")}\r\n        }\r\n\r\n        // Converte nuovamente gli \"bits di floating point\" in un f64 modificato\r\n        number = f64::from_bits(bits);\r\n\r\n        println!(\"Modified number: {}\", number);\r\n        match error.err_comp {\r\n            ErrorComponent::Threshold => { self.v_threshold = number; },\r\n            ErrorComponent::VMem => { self.v_mem = number; },\r\n            _ => {println!(\"codione sempre prob\")},\r\n        }\r\n    }\r\n}\r\n\r\nimpl fmt::Display for Neuron {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n\r\n        // let mut owned_string: String = \"hello \".to_owned();\r\n        // let borrowed_string: &str = \"world\";\r\n        //\r\n        // owned_string.push_str(borrowed_string);\r\n        // println!(\"{}\", owned_string);\r\n\r\n\r\n        let mut s1 = \"[ \".to_owned();\r\n        for i in &self.connections_same_layer{\r\n            // s1 = s1 + &round_f64(i).to_string();\r\n            s1 = s1 +  format!(\"{:.2}\", i).as_str() ;\r\n\r\n            s1 = s1 + \", \";\r\n        }\r\n        s1.pop();\r\n        s1.pop();\r\n        s1 = s1 + \" ]\";\r\n\r\n        let mut s2 = \"[ \".to_owned();\r\n        for i in &self.connections_prec_layer{\r\n            // s1 = s1 + &round_f64(i).to_string();\r\n            s2 = s2 +  format!(\"{:.2}\", i).as_str() ;\r\n\r\n            s2 = s2 + \", \";\r\n        }\r\n        s2.pop();\r\n        s2.pop();\r\n        s2 = s2 + \" ]\";\r\n\r\n\r\n        write!(f, \"Neuron : id : {}, v_rest : {}, v_threshold : {}, v_mem  : {}, v_reset : {}, connections_same_layer : {}, connections_prec_layer : {}\",\r\n               self.id,\r\n               round_f64(self.v_rest),\r\n               round_f64(self.v_threshold),\r\n               round_f64(self.v_mem),\r\n               round_f64(self.v_reset),\r\n                s1, s2)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfn round_f64(n : f64) -> f64{\r\n    (n * 100.0).round() / 100.0\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/neuron.rs	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ src/neuron.rs	(date 1692288741667)
@@ -35,7 +35,7 @@
 
 #[derive(Debug, Clone, Copy)]
 pub struct ConfErr {
-    id_neuron: i32,
+    pub id_neuron: i32,
     t_start: i32,
     duration: i32, //valutare se aggiungere t_end cosi da avere sempre vincolo dentro boundaries (generi da t_start+1 a input.len())
     //counter_duration: i32,
@@ -59,6 +59,12 @@
             v_start
         }
     }
+
+    pub fn is_overlapping(&self, t_start : i32, duration : i32) -> bool{
+        (self.t_start < t_start+duration && self.t_start > t_start) || (self.t_start+self.duration > t_start && self.t_start < t_start )
+    }
+
+
 }
 
 #[derive(Debug, Clone)]
@@ -157,10 +163,10 @@
         // Converte nuovamente gli "bits di floating point" in un f64 modificato
         number = f64::from_bits(bits);
 
-        println!("Modified number: {}", number);
+
         match error.err_comp {
-            ErrorComponent::Threshold => { self.v_threshold = number; },
-            ErrorComponent::VMem => { self.v_mem = number; },
+            ErrorComponent::Threshold => { println!("threshold {}, Modified number: {}", self.v_threshold, number); self.v_threshold = number;  },
+            ErrorComponent::VMem => { println!("v_mem {}, Modified number: {}", self.v_mem, number); self.v_mem = number; },
             _ => {println!("codione sempre prob")},
         }
     }
Index: src/layer.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>use crate::neuron::Neuron;\r\nuse crate::neuron::ConfErr;\r\nuse crate::neuron::ErrorComponent;\r\nuse crate::neuron::Type;\r\nuse rand::{thread_rng, Rng};\r\n\r\n#[derive(Debug, Clone)]\r\npub struct Layer{\r\n    pub neurons : Vec<Neuron>,\r\n    range: (i32, i32)\r\n    // input : Vec<i32>,\r\n    // output : Vec<i32>,\r\n    // output_prec : Vec<i32>,\r\n}\r\n\r\nimpl Layer{\r\n\r\n    pub fn new(start_id : i32, n_neurons : i32, n_neurons_pre : i32) -> Self {\r\n        let mut rng = thread_rng();\r\n        let mut neurons = Vec::new();\r\n        let mut id = start_id;\r\n        let mult = 15.0;\r\n\r\n        for _ in 0..n_neurons{\r\n            let mut weights_same = Vec::new();\r\n            for _ in 0..n_neurons-1{\r\n                weights_same.push(  rng.gen::<f64>()*mult );\r\n            }\r\n\r\n            let mut weights_prec = Vec::new();\r\n            if n_neurons_pre == -1{\r\n                for j in 0..n_neurons{\r\n                    weights_prec.push(   if j == id { rng.gen::<f64>()*mult }else{ 0.0 });\r\n                }\r\n            }\r\n            else {\r\n                for _ in 0..n_neurons_pre{\r\n                    weights_prec.push( rng.gen::<f64>()*mult );\r\n                }\r\n            }\r\n\r\n            neurons.push( Neuron::new(id,-52.0,-65.0,-65.0,-60.0,weights_same, weights_prec) );\r\n            id = id + 1;\r\n        }\r\n\r\n        Layer{\r\n            neurons,\r\n            range: (start_id, start_id+n_neurons-1)\r\n        }\r\n\r\n    }\r\n\r\n    pub fn compute_output(&mut self, inputs_prec_layer : &Vec<i32>, inputs_same_layer : &Vec<i32>, errors_vec: &mut Vec<ConfErr>, time: usize) -> Vec<i32>{\r\n        let mut output = Vec::new();\r\n        let mut i = 0;\r\n\r\n        for n in &mut self.neurons{\r\n            let mut inputs_same_layer_copy = inputs_same_layer.clone();\r\n            inputs_same_layer_copy.remove(i);\r\n            i=i+1;\r\n            output.push(n.compute_output(&inputs_prec_layer, &inputs_same_layer_copy, errors_vec, time as i32));\r\n        }\r\n        output\r\n    }\r\n\r\n    pub fn create_vec_err(&self, type_err:Type, n_errors: i32) -> Vec<ConfErr>{\r\n        let mut errors_vec = Vec::new();\r\n        for _ in 0..n_errors{\r\n            let mut rng = rand::thread_rng();\r\n            let id_n = rng.gen_range(self.range.0..=self.range.1);\r\n\r\n            let mut err = ConfErr::new(id_n,0,1,54,type_err,ErrorComponent::Threshold,0.0);\r\n            errors_vec.push(err);\r\n        }\r\n        println!(\"creati errori: {:?}\",errors_vec);\r\n        errors_vec\r\n    }\r\n    /*pub fn clone_neuron(&self)-> Neuron{\r\n        self.neurons[0].clone()\r\n    }*/\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/layer.rs	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ src/layer.rs	(date 1692287161368)
@@ -64,15 +64,36 @@
     }
 
     pub fn create_vec_err(&self, type_err:Type, n_errors: i32) -> Vec<ConfErr>{
-        let mut errors_vec = Vec::new();
-        for _ in 0..n_errors{
-            let mut rng = rand::thread_rng();
-            let id_n = rng.gen_range(self.range.0..=self.range.1);
+
+        if n_errors <= 0{
+            return vec![];
+        }
+
+        let mut errors_vec = Vec::<ConfErr>::new();
+        let mut rng = rand::thread_rng();
+        let duration = 2;
+        let tot_time = 10;
+
+
+        for _ in 0..n_errors{
+
+            'loop_flag : loop{
+
+                let id_n = rng.gen_range(self.range.0..=self.range.1);
+                let rnd_start_time = rng.gen_range(0..tot_time);
+                for e in &errors_vec{
+                    if e.id_neuron == id_n && e.is_overlapping(rnd_start_time,duration){
+                        continue 'loop_flag;
+                    }
+                }
+                errors_vec.push(ConfErr::new(id_n,rnd_start_time,duration,rng.gen_range(0..64),type_err,ErrorComponent::Threshold,0.0));
+                break 'loop_flag;
+            }
 
-            let mut err = ConfErr::new(id_n,0,1,54,type_err,ErrorComponent::Threshold,0.0);
-            errors_vec.push(err);
+
+
         }
-        println!("creati errori: {:?}",errors_vec);
+        // println!("creati errori: {:?}",errors_vec);
         errors_vec
     }
     /*pub fn clone_neuron(&self)-> Neuron{
Index: src/network.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>extern crate rand;\r\nuse crate::rand::Rng;\r\nuse std::vec;\r\nuse std::sync::mpsc;\r\nuse std::thread;\r\nuse crate::neuron::ConfErr;\r\nuse crate::neuron::ErrorComponent;\r\nuse crate::neuron::Type;\r\nuse crate::layer::Layer;\r\n\r\npub struct Network {\r\n    layers: Vec<Layer>,\r\n    vec_neurons : Vec<i32>\r\n}\r\n\r\n\r\nimpl Network{\r\n\r\n    pub fn new(vec_neurons : Vec<i32>) -> Self { //vettore in lunghezza indica numero layer ed il singolo valore indica quanti neuroni a lvl\r\n        let mut layers = Vec::<Layer>::new();\r\n        let n_layers = vec_neurons.len();\r\n        let mut start_id = 0;\r\n\r\n        //chiama la funzione in layer che genera i layer con i neuroni\r\n        for i in 0..n_layers {\r\n            if i == 0 {\r\n                layers.push(Layer::new(start_id,vec_neurons[i], -1));\r\n            } else {\r\n                layers.push(Layer::new(start_id,vec_neurons[i], vec_neurons[i - 1]));\r\n            }\r\n            start_id = start_id + vec_neurons[i];\r\n        }\r\n\r\n        /*************************************************************/\r\n\r\n\r\n        Network {\r\n            layers,\r\n            vec_neurons,\r\n            // sender_input,\r\n            // receiver_output,\r\n\r\n\r\n        }\r\n    }\r\n/***********************************************************************************************/\r\n\r\n    fn create_errors(&self, n_err: i32) -> Vec<i32>{\r\n        let mut errors_vec = vec![0; self.layers.len()];\r\n        for _ in 0..n_err{\r\n            let mut rng = rand::thread_rng();\r\n            let x = rng.gen_range(0..self.layers.len());\r\n            errors_vec[x] += 1;\r\n        }\r\n        return errors_vec;\r\n    }\r\n/***********************************************************************************************/\r\n\r\n    pub fn create_thread(&mut self, inputs: Vec<Vec<i32>>, type_err: Type, n_err: i32) -> Vec<Vec<i32>> {\r\n\r\n        let length_input = inputs.len();\r\n        let n_layers = self.vec_neurons.len();\r\n        let mut sender = Vec::new();\r\n        let mut receiver = Vec::new();\r\n        for _ in 0..n_layers{\r\n            let (s, r) = mpsc::channel::<Vec<i32>>();\r\n            sender.push(s);\r\n            receiver.push(r);\r\n        }\r\n\r\n        let errors_vec = self.create_errors(n_err);\r\n        println!(\"vec_errors: {:?}\", errors_vec);\r\n\r\n        let (sender_output, receiver_output) = mpsc::channel::<Vec<i32>>();\r\n        // let sender_input = sender[0].clone();\r\n        /*************************************************************/\r\n\r\n        for i in 0..length_input{\r\n            sender[0].send(inputs[i].clone()).unwrap();\r\n            println!(\"input {} : {:?}\", i, inputs[i]);\r\n        }\r\n\r\n        /*************************************************************/\r\n\r\n        let mut threads = Vec::new();\r\n        for (layer, rec) in receiver.into_iter().enumerate() {\r\n            let send;\r\n            if layer == n_layers - 1 { //ultimo layer\r\n                send = sender_output.clone();\r\n            } else {\r\n                send = sender[layer + 1].clone();\r\n            }\r\n\r\n            let n_neurons_in_layer = self.vec_neurons[layer];\r\n            let mut layer_copy = self.layers[layer].clone();\r\n            let n_err_xlayer = errors_vec[layer];\r\n            // println!(\"copy {:?}\", layer_copy);\r\n\r\n            let handle = thread::spawn(move || {\r\n                let mut input_same_layer = vec![0; n_neurons_in_layer as usize];\r\n\r\n                let mut vec_err = layer_copy.create_vec_err(type_err, n_err_xlayer);\r\n\r\n                for j in 0..length_input {\r\n                    let input_prec_layer = rec.recv().unwrap();\r\n\r\n                    // let output = vec![input_prec_layer[0]+input_same_layer[0];input_prec_layer.len()];\r\n\r\n                    let output = layer_copy.compute_output(&input_prec_layer, &input_same_layer, &mut vec_err, j);\r\n\r\n                    println!(\"thread {}, time : {}, input_same_layer : {:?}, input_prec_layer : {:?}, output : {:?}\", layer, j, input_same_layer, input_prec_layer, output);\r\n                    input_same_layer = output.clone();\r\n                    send.send(output).unwrap();\r\n                }\r\n                layer_copy\r\n            });\r\n\r\n            threads.push(handle);\r\n        }\r\n\r\n        /*************************************************************/\r\n\r\n        let mut outputs = Vec::new();\r\n        outputs.push(receiver_output.recv().unwrap());\r\n        outputs.push(receiver_output.recv().unwrap());\r\n\r\n        let mut layers = Vec::new();\r\n        for t in threads {\r\n            layers.push(t.join().unwrap() );\r\n        }\r\n        //self.layers = layers; //se questo verrà fatto, vedere se funziona la chiamata a create_Err che ha self come riferimento in lettura mentre qui è mutabile\r\n        outputs\r\n    }\r\n\r\n/***********************************************************************************************/\r\n\r\n    pub fn print_network(&self){\r\n        println!(\"Network :\");\r\n        for layer in &self.layers{\r\n            println!(\"  Layer :\");\r\n            for neuron in &layer.neurons{\r\n                println!(\"    {}\", neuron);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*pub fn print_a_neuron(&self){\r\n        println!(\"n : {}\", self.layers[0].clone_neuron());\r\n\r\n    }*/\r\n\r\n    // pub fn thread_join(&self){\r\n    //     let mut x = 0;\r\n    //     for t in self.threads.iter() {\r\n    //         x = x + t.join().unwrap();\r\n    //     }\r\n    //\r\n    //     println!(\"join : {}\", x);\r\n    // }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/network.rs	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ src/network.rs	(date 1692286264461)
@@ -52,6 +52,7 @@
             let x = rng.gen_range(0..self.layers.len());
             errors_vec[x] += 1;
         }
+
         return errors_vec;
     }
 /***********************************************************************************************/
@@ -69,7 +70,7 @@
         }
 
         let errors_vec = self.create_errors(n_err);
-        println!("vec_errors: {:?}", errors_vec);
+        println!("vec_errors: {:?} - n_err: {}", errors_vec, n_err);
 
         let (sender_output, receiver_output) = mpsc::channel::<Vec<i32>>();
         // let sender_input = sender[0].clone();
@@ -94,12 +95,18 @@
             let n_neurons_in_layer = self.vec_neurons[layer];
             let mut layer_copy = self.layers[layer].clone();
             let n_err_xlayer = errors_vec[layer];
+
             // println!("copy {:?}", layer_copy);
 
             let handle = thread::spawn(move || {
                 let mut input_same_layer = vec![0; n_neurons_in_layer as usize];
 
+
                 let mut vec_err = layer_copy.create_vec_err(type_err, n_err_xlayer);
+                if n_err_xlayer > 0 {
+                    println!("layer : {} creati errori: {} - {:?}",layer, vec_err.len(), vec_err);
+                }
+
 
                 for j in 0..length_input {
                     let input_prec_layer = rec.recv().unwrap();
Index: src/main.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>extern crate rand;\r\n\r\nmod network;\r\nmod neuron;\r\nmod layer;\r\n\r\nuse network::Network;\r\nuse neuron::ConfErr;\r\nuse crate::neuron::ErrorComponent;\r\nuse crate::neuron::Type;\r\n\r\n\r\nfn main() {\r\n    let mut network = Network::new( vec![10, 7, 5, 6]);\r\n    network.print_network();\r\n    // network.print_a_neuron();\r\n\r\n    println!(\"\\n*********************************************\\n\");\r\n\r\n    let mut inputs = Vec::new();\r\n    inputs.push(vec![1;10]);\r\n    inputs.push(vec![1;10]);\r\n    inputs.push(vec![1;10]);\r\n    let mut outputs;// = network.create_thread(inputs.clone(), Type::None, 0);\r\n\r\n   // for i in 0..outputs.len(){\r\n        //println!(\"output {} : {:?}\", i, outputs[i]);\r\n    //}\r\n\r\n    println!(\"\\n*********************************************\\n\");\r\n\r\n    network.print_network();\r\n\r\n    //let mut error = ConfErr::new(2,1,0,2,0,16,Type::Stuck0,ErrorComponent::Threshold);\r\n    outputs = network.create_thread(inputs, Type::Stuck0, 1);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main.rs	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ src/main.rs	(date 1692289136493)
@@ -8,9 +8,18 @@
 use neuron::ConfErr;
 use crate::neuron::ErrorComponent;
 use crate::neuron::Type;
+use rand::Rng;
 
-
+pub fn gen_inputs( n_input: usize)-> Vec<i32>{
+    let mut rnd = rand::thread_rng();
+    let mut input = Vec::new();
+    for i  in 0..n_input{
+        input.push((rnd.gen_range(0..10) as i32)%2);
+    }
+    input
+}
 fn main() {
+
     let mut network = Network::new( vec![10, 7, 5, 6]);
     network.print_network();
     // network.print_a_neuron();
@@ -18,19 +27,22 @@
     println!("\n*********************************************\n");
 
     let mut inputs = Vec::new();
-    inputs.push(vec![1;10]);
-    inputs.push(vec![1;10]);
-    inputs.push(vec![1;10]);
-    let mut outputs;// = network.create_thread(inputs.clone(), Type::None, 0);
+    inputs.push(gen_inputs(10));
+    inputs.push(gen_inputs(10));
+    inputs.push(gen_inputs(10));
+    inputs.push(gen_inputs(10));
+    inputs.push(gen_inputs(10));
 
-   // for i in 0..outputs.len(){
-        //println!("output {} : {:?}", i, outputs[i]);
-    //}
+    let mut outputs = network.create_thread(inputs.clone(), Type::None, 0);
+
+   for i in 0..outputs.len(){
+        println!("output {} : {:?}", i, outputs[i]);
+    }
 
     println!("\n*********************************************\n");
 
-    network.print_network();
+    // network.print_network();
 
     //let mut error = ConfErr::new(2,1,0,2,0,16,Type::Stuck0,ErrorComponent::Threshold);
-    outputs = network.create_thread(inputs, Type::Stuck0, 1);
+    outputs = network.create_thread(inputs, Type::Stuck0, 50);
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\r\n    <generated />\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"CargoProjects\">\r\n    <cargoProject FILE=\"$PROJECT_DIR$/Cargo.toml\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1a1e5f37-387d-4765-b1a7-d625a447373d\" name=\"Default Changelist\" comment=\"matteo4\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/layer.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/layer.rs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main.rs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/network.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/network.rs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/neuron.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/neuron.rs\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Rust File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MacroExpansionManager\">\r\n    <option name=\"directoryName\" value=\"92ock5oa\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2TqCsaxgyrNTPUGCKLnoXQwqZCU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"org.rust.cargo.project.model.PROJECT_DISCOVERY\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Run\" type=\"CargoCommandRunConfiguration\" factoryName=\"Cargo Command\" nameIsGenerated=\"true\">\r\n      <option name=\"command\" value=\"run\" />\r\n      <option name=\"workingDirectory\" value=\"file://$PROJECT_DIR$\" />\r\n      <option name=\"channel\" value=\"DEFAULT\" />\r\n      <option name=\"requiredFeatures\" value=\"true\" />\r\n      <option name=\"allFeatures\" value=\"false\" />\r\n      <option name=\"emulateTerminal\" value=\"false\" />\r\n      <option name=\"backtrace\" value=\"SHORT\" />\r\n      <envs />\r\n      <option name=\"isRedirectInput\" value=\"false\" />\r\n      <option name=\"redirectInputPath\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"CARGO.BUILD_TASK_PROVIDER\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"RustProjectSettings\">\r\n    <option name=\"toolchainHomeDirectory\" value=\"$USER_HOME$/.cargo/bin\" />\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1a1e5f37-387d-4765-b1a7-d625a447373d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1691761432102</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1691761432102</updated>\r\n      <workItem from=\"1691761433168\" duration=\"127000\" />\r\n      <workItem from=\"1691761569966\" duration=\"4336000\" />\r\n      <workItem from=\"1691768599102\" duration=\"5003000\" />\r\n      <workItem from=\"1691844876418\" duration=\"8516000\" />\r\n      <workItem from=\"1691853798550\" duration=\"30000\" />\r\n      <workItem from=\"1691854407990\" duration=\"2971000\" />\r\n      <workItem from=\"1691857941893\" duration=\"348000\" />\r\n      <workItem from=\"1691932643031\" duration=\"1293000\" />\r\n      <workItem from=\"1691934745064\" duration=\"261000\" />\r\n      <workItem from=\"1691939304560\" duration=\"10577000\" />\r\n      <workItem from=\"1691950979876\" duration=\"6505000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"matteo2\">\r\n      <created>1691769064064</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1691769064064</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"matteo3\">\r\n      <created>1691772307574</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1691772307574</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"matteo4\">\r\n      <created>1691852922284</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1691852922284</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"matteo2\" />\r\n    <MESSAGE value=\"matteo3\" />\r\n    <MESSAGE value=\"matteo4\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"matteo4\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"414\" y=\"170\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1691761484741\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"414\" y=\"170\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691761484741\" />\r\n    <state x=\"740\" y=\"270\" key=\"FileChooserDialogImpl\" timestamp=\"1691847680857\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"740\" y=\"270\" key=\"FileChooserDialogImpl/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691847680857\" />\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1691955112089\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.bottom/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691955112089\" />\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.center\" timestamp=\"1691955112089\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.center/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691955112089\" />\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.left\" timestamp=\"1691955112089\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.left/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691955112089\" />\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.right\" timestamp=\"1691955112089\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"810\" height=\"854\" key=\"GridCell.Tab.0.right/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691955112089\" />\r\n    <state x=\"184\" y=\"85\" key=\"MergeDialog\" timestamp=\"1691764889634\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"184\" y=\"85\" key=\"MergeDialog/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691764889634\" />\r\n    <state x=\"552\" y=\"244\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1691852930059\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"552\" y=\"244\" key=\"Vcs.Push.Dialog.v2/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691852930059\" />\r\n    <state x=\"777\" y=\"425\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1691939310723\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"777\" y=\"425\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691939310723\" />\r\n    <state x=\"623\" y=\"223\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1691761672559\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"623\" y=\"223\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/0.0.1920.1032@0.0.1920.1032\" timestamp=\"1691761672559\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ .idea/workspace.xml	(date 1692290169591)
@@ -31,6 +31,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="1a1e5f37-387d-4765-b1a7-d625a447373d" name="Default Changelist" comment="matteo4">
+      <change beforePath="$PROJECT_DIR$/../.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/layer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/layer.rs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.rs" afterDir="false" />
@@ -54,6 +55,7 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MacroExpansionManager">
     <option name="directoryName" value="92ock5oa" />
@@ -118,6 +120,8 @@
       <workItem from="1691934745064" duration="261000" />
       <workItem from="1691939304560" duration="10577000" />
       <workItem from="1691950979876" duration="6505000" />
+      <workItem from="1692279907748" duration="4858000" />
+      <workItem from="1692284835913" duration="4526000" />
     </task>
     <task id="LOCAL-00001" summary="matteo2">
       <created>1691769064064</created>
@@ -169,26 +173,26 @@
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
     <state x="414" y="170" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1032@0.0.1920.1032" timestamp="1691761484741" />
-    <state x="740" y="270" key="FileChooserDialogImpl" timestamp="1691847680857">
+    <state x="740" y="270" key="FileChooserDialogImpl" timestamp="1692284767444">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state x="740" y="270" key="FileChooserDialogImpl/0.0.1920.1032@0.0.1920.1032" timestamp="1691847680857" />
-    <state width="810" height="854" key="GridCell.Tab.0.bottom" timestamp="1691955112089">
+    <state x="740" y="270" key="FileChooserDialogImpl/0.0.1920.1032@0.0.1920.1032" timestamp="1692284767444" />
+    <state width="983" height="656" key="GridCell.Tab.0.bottom" timestamp="1692289137940">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state width="810" height="854" key="GridCell.Tab.0.bottom/0.0.1920.1032@0.0.1920.1032" timestamp="1691955112089" />
-    <state width="810" height="854" key="GridCell.Tab.0.center" timestamp="1691955112089">
+    <state width="983" height="656" key="GridCell.Tab.0.bottom/0.0.1920.1032@0.0.1920.1032" timestamp="1692289137940" />
+    <state width="983" height="656" key="GridCell.Tab.0.center" timestamp="1692289137939">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state width="810" height="854" key="GridCell.Tab.0.center/0.0.1920.1032@0.0.1920.1032" timestamp="1691955112089" />
-    <state width="810" height="854" key="GridCell.Tab.0.left" timestamp="1691955112089">
+    <state width="983" height="656" key="GridCell.Tab.0.center/0.0.1920.1032@0.0.1920.1032" timestamp="1692289137939" />
+    <state width="983" height="656" key="GridCell.Tab.0.left" timestamp="1692289137939">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state width="810" height="854" key="GridCell.Tab.0.left/0.0.1920.1032@0.0.1920.1032" timestamp="1691955112089" />
-    <state width="810" height="854" key="GridCell.Tab.0.right" timestamp="1691955112089">
+    <state width="983" height="656" key="GridCell.Tab.0.left/0.0.1920.1032@0.0.1920.1032" timestamp="1692289137939" />
+    <state width="983" height="656" key="GridCell.Tab.0.right" timestamp="1692289137940">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state width="810" height="854" key="GridCell.Tab.0.right/0.0.1920.1032@0.0.1920.1032" timestamp="1691955112089" />
+    <state width="983" height="656" key="GridCell.Tab.0.right/0.0.1920.1032@0.0.1920.1032" timestamp="1692289137940" />
     <state x="184" y="85" key="MergeDialog" timestamp="1691764889634">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
@@ -197,10 +201,10 @@
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
     <state x="552" y="244" key="Vcs.Push.Dialog.v2/0.0.1920.1032@0.0.1920.1032" timestamp="1691852930059" />
-    <state x="777" y="425" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1691939310723">
+    <state x="777" y="425" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1692290169573">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
-    <state x="777" y="425" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1032@0.0.1920.1032" timestamp="1691939310723" />
+    <state x="777" y="425" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1032@0.0.1920.1032" timestamp="1692290169573" />
     <state x="623" y="223" width="672" height="678" key="search.everywhere.popup" timestamp="1691761672559">
       <screen x="0" y="0" width="1920" height="1032" />
     </state>
Index: ../.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </select>\r\n  </component>\r\n  <component name=\"CMakePresetLoader\">{\r\n  &quot;useNewFormat&quot;: true\r\n}</component>\r\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\r\n    <generated />\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"CargoProjects\">\r\n    <cargoProject FILE=\"$PROJECT_DIR$/lab1/Cargo.toml\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a89491a6-8373-40e6-ac83-9ebad8917449\" name=\"Default Changelist\" comment=\"try to do refreshing v\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SNN/src/layer.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SNN/src/layer.rs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SNN/src/main.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SNN/src/main.rs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SNN/src/network.rs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SNN/src/network.rs\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"hiddenUrls\">\r\n      <set>\r\n        <option value=\"https://github.com/ProgrammazioneDiSistema2023-IA-ZZ/Group13\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"MacroExpansionManager\">\r\n    <option name=\"directoryName\" value=\"ar74ln91\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2TcKw9I33fHoS6lwjsEyCxoCJSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/ricca.LAPTOP-P9JKHG7N/Desktop/PDS/Group13\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"org.rust.cargo.project.model.PROJECT_DISCOVERY\": \"true\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"GradleAppRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Run\" type=\"CargoCommandRunConfiguration\" factoryName=\"Cargo Command\" nameIsGenerated=\"true\">\r\n      <option name=\"command\" value=\"run\" />\r\n      <option name=\"workingDirectory\" value=\"file://$PROJECT_DIR$/lab1\" />\r\n      <option name=\"emulateTerminal\" value=\"false\" />\r\n      <option name=\"channel\" value=\"DEFAULT\" />\r\n      <option name=\"requiredFeatures\" value=\"true\" />\r\n      <option name=\"allFeatures\" value=\"false\" />\r\n      <option name=\"withSudo\" value=\"false\" />\r\n      <option name=\"buildTarget\" value=\"REMOTE\" />\r\n      <option name=\"backtrace\" value=\"SHORT\" />\r\n      <envs />\r\n      <option name=\"isRedirectInput\" value=\"false\" />\r\n      <option name=\"redirectInputPath\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"CARGO.BUILD_TASK_PROVIDER\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"RustProjectSettings\">\r\n    <option name=\"toolchainHomeDirectory\" value=\"$USER_HOME$/.cargo/bin\" />\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a89491a6-8373-40e6-ac83-9ebad8917449\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1691337166379</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1691337166379</updated>\r\n      <workItem from=\"1691337168249\" duration=\"529000\" />\r\n      <workItem from=\"1691479720583\" duration=\"783000\" />\r\n      <workItem from=\"1691480529565\" duration=\"994000\" />\r\n      <workItem from=\"1691482970327\" duration=\"18000\" />\r\n      <workItem from=\"1691501219418\" duration=\"702000\" />\r\n      <workItem from=\"1691568251126\" duration=\"606000\" />\r\n      <workItem from=\"1691761059358\" duration=\"228000\" />\r\n      <workItem from=\"1691761297263\" duration=\"134000\" />\r\n      <workItem from=\"1691769417768\" duration=\"2188000\" />\r\n      <workItem from=\"1691836879881\" duration=\"35822000\" />\r\n      <workItem from=\"1692277902506\" duration=\"1732000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"prova 2\">\r\n      <created>1691479883376</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1691479883376</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some fixes\">\r\n      <created>1692020326880</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692020326880</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some fixes\">\r\n      <created>1692020399059</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692020399059</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"first version for error\">\r\n      <created>1692024707281</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692024707281</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"actual with error\">\r\n      <created>1692031316653</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692031316653</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"add error (not weights)\">\r\n      <created>1692199924715</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692199924715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"try to do refreshing v\">\r\n      <created>1692205791132</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692205791132</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"prova 2\" />\r\n    <MESSAGE value=\"some fixes\" />\r\n    <MESSAGE value=\"first version for error\" />\r\n    <MESSAGE value=\"actual with error\" />\r\n    <MESSAGE value=\"add error (not weights)\" />\r\n    <MESSAGE value=\"try to do refreshing v\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"try to do refreshing v\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../.idea/workspace.xml	(revision d102d5d36eb67e428d4364f8c64160775b8a03a3)
+++ ../.idea/workspace.xml	(date 1692279896568)
@@ -26,27 +26,19 @@
       </path>
     </select>
   </component>
-  <component name="CMakePresetLoader">{
-  &quot;useNewFormat&quot;: true
-}</component>
   <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
     <generated />
   </component>
   <component name="CMakeSettings">
     <configurations>
-      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
+      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
     </configurations>
   </component>
   <component name="CargoProjects">
     <cargoProject FILE="$PROJECT_DIR$/lab1/Cargo.toml" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a89491a6-8373-40e6-ac83-9ebad8917449" name="Default Changelist" comment="try to do refreshing v">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SNN/src/layer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/SNN/src/layer.rs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SNN/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/SNN/src/main.rs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SNN/src/network.rs" beforeDir="false" afterPath="$PROJECT_DIR$/SNN/src/network.rs" afterDir="false" />
-    </list>
+    <list default="true" id="a89491a6-8373-40e6-ac83-9ebad8917449" name="Default Changelist" comment="try to do refreshing v" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -77,37 +69,20 @@
     <option name="showLibraryContents" value="true" />
     <option name="sortByType" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.cidr.known.project.marker": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "cf.first.check.clang-format": "false",
-    "cidr.known.project.marker": "true",
-    "last_opened_file_path": "C:/Users/ricca.LAPTOP-P9JKHG7N/Desktop/PDS/Group13",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
-    "vue.rearranger.settings.migration": "true"
-  }
-}]]></component>
+  <component name="PropertiesComponent">
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="cf.first.check.clang-format" value="false" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="org.rust.cargo.project.model.PROJECT_DISCOVERY" value="true" />
+  </component>
   <component name="RunManager">
-    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
-      <method v="2">
-        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
     <configuration name="Run" type="CargoCommandRunConfiguration" factoryName="Cargo Command" nameIsGenerated="true">
       <option name="command" value="run" />
       <option name="workingDirectory" value="file://$PROJECT_DIR$/lab1" />
-      <option name="emulateTerminal" value="false" />
       <option name="channel" value="DEFAULT" />
       <option name="requiredFeatures" value="true" />
       <option name="allFeatures" value="false" />
-      <option name="withSudo" value="false" />
-      <option name="buildTarget" value="REMOTE" />
+      <option name="emulateTerminal" value="false" />
       <option name="backtrace" value="SHORT" />
       <envs />
       <option name="isRedirectInput" value="false" />
@@ -140,6 +115,7 @@
       <workItem from="1691769417768" duration="2188000" />
       <workItem from="1691836879881" duration="35822000" />
       <workItem from="1692277902506" duration="1732000" />
+      <workItem from="1692279858025" duration="39000" />
     </task>
     <task id="LOCAL-00001" summary="prova 2">
       <created>1691479883376</created>
@@ -206,6 +182,7 @@
         </entry>
       </map>
     </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="prova 2" />
